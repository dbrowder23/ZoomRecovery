#!/bin/bash

# Check if running as root
if [[ "$EUID" -ne 0 ]]; then
  echo "[!] Some functions (e.g., spoofing MAC address, WiFi control) require root."
  echo "[!] Please run with sudo if you want full functionality:"
  echo "    sudo zoomrecovery"
  echo ""
  echo "[*] Continuing with partial functionality (Zoom data cleanup)..."
  PARTIAL_MODE=true
else
  PARTIAL_MODE=false
fi

# Close Zoom.us if open
osascript -e 'quit app "zoom.us"'
sleep 2

# Turn off WiFi (only if root)
if [[ "$PARTIAL_MODE" = false ]]; then
  echo "Turning off WiFi..."
  networksetup -setairportpower en0 off
  sleep 1
else
  echo "[!] Skipping WiFi disable (requires root)"
fi

# Spoof MAC address (only if root)
if [[ "$PARTIAL_MODE" = false ]]; then
  echo "[*] Spoofing MAC address..."
  /opt/homebrew/bin/spoof-mac randomize en0
  sleep 1
else
  echo "[!] Skipping MAC spoofing (requires root)"
fi

# Wipe specific Zoom .db files
ZOOMDATA="$HOME/Library/Application Support/zoom.us/data"
FILES=("zoomus.zmdb.default.noenc.rlock.db" "zoomus.enc.db" "zoommeeting.enc.db")

for file in "${FILES[@]}"; do
  fullpath="$ZOOMDATA/$file"
  if [ -f "$fullpath" ]; then
    : > "$fullpath"
    echo "Wiped $fullpath"
  else
    echo "File not found: $fullpath"
  fi
done

# Turn WiFi back on (only if root)
if [[ "$PARTIAL_MODE" = false ]]; then
  echo "Turning WiFi back on..."
  networksetup -setairportpower en0 on
  sleep 1
else
  echo "[!] Skipping WiFi re-enable (requires root)"
fi

# Open Zoom.us again
echo "Opening Zoom..."
open -a "zoom.us"

echo "Zoom 1132 fix complete!"
